---
title: "Data Science for Public Policy"
subtitle: "Final Project"
author: "Xiangming Zeng - xz634, Ruiyang Zhang - rz326, Lingxi Li - ll1188, Xiaorui Shi - xs215"
execute:
  warning: false
format:
  html:
    embed-resources: true
---

# I. Introduction

## 1. Background and Literature Review

The increasingly prominent environmental issues pose a significant challenge to human survival. The utilization of new energy sources, including renewable energy generation and the use of new energy vehicles, has highlighted the potential of policy solutions to address these environmental challenges. To what extent can the use of clean energy improve environmental quality? This question drives us to conduct research, aiming to establish a model that utilizes relevant data on new energy usage to predict environmental quality, especially focusing on air quality. Additionally, we seek to provide policy recommendations for further investment in new energy infrastructure.

## 2. Structure of This Article



# 2. Data Sources

### [A. Air Quality Index Annual Summary Data (2021)](https://www.epa.gov/outdoor-air-quality-data)

This data is from the U.S. Environmental Protection Agency. We intend to use the proportion of "good days" as a proxy of air quality in each county in 2021. We downloaded Pre-generated data file for 2021 by clicking Pre-generated Data Files -\> Table of Annual Summary Data -\> annual_aqi_by_county_2021.zip. This zip document contains only one csv document "annual_aqi_by_county_2021.csv" and we are using this one.

### [B. Alternative Fueling Station Locations (2021)](https://catalog.data.gov/dataset/alternative-fueling-station-locations-422f2)

This dataset was created by The Alternative Fuels Data Center (AFDC). It contains the latitude and longitude information of each alternative fueling station across the U.S. It can be seen as a proxy of the usage of light-duty vehicles in each county in 2021. we downloaded the 2021 dataset, "Alternative Fuel Stations 2021.csv" ,under "Downloads & Resources".

### [C. Energy Generation: Form EIA-923 (2021)](https://www.eia.gov/electricity/data/eia923/)

This form collects detailed data -- monthly and annually -- on electricity generation from all power plants in the U.S.. It contains variables about plant name, plant code, fuel type, amount of electricity generation, amount of electricity consumed, and thus net generation, etc. Each plant could have more than one row if it uses different fuel types. By combining it with Form EIA-860, we can connect energy generations to corresponding plants. We downloaded the zip document with year of "2021: EIA-923" on this website. It contains three documents and we are using the one called "EIA923_Schedules_2_3_4_5_M_12_2021_Final_Revision.xlsx" because it contains annually net electricity generation data.

### [D. Power Plant: Form EIA-860 (2021)](https://www.eia.gov/electricity/data/eia860/)

The Form EIA-860 collects plant-level specific information about existing and planned electric power plants with 1 megawatt or greater of combined nameplate capacity. It contains plant name, plant code, and geographical information, including county, state, longitude, latitude, etc. It can be joined with Form EIA-923 to calculate the amount of energy generation at the county level. We downloaded the zip document with year of 2021 on this website. It contains 13 documents and we are using the one called "2\_\_\_Plant_Y2021.xlsx" which provides plant-level information.

### [E. NCHS Urban-Rural Classification (2013)](https://www.cdc.gov/nchs/data_access/urban_rural.htm)

Given that urbanization is an important factor for air quality and demands for alternative fueling stations, we add NCHS Urban-Rural Classification as a proxy of urbanization level. There are six categories for all counties in the U.S. ranging from 1 (large central metro) to 6 (non-core). We downloaded "NCHSURCodes2013.xlsx" at the bottom of the website, under "Data Files and Documentation". Since 2013 version is the lastest, we will use the 2013 code. We believe that the urbanization levels of counties will not change significantly during a decade.

### F. DC public facilities

To explore the accessibility to alternative fueling stations in DC, we downloaded geojson documents of [hospitals](https://hub.arcgis.com/datasets/5de949289bb248fc842f3b8324f28eda_0/explore), [public schools](https://hub.arcgis.com/datasets/4ac321b2d409438ebd76a6569ad94034_5/explore), [charter schools](https://hub.arcgis.com/datasets/a3832935b1d644e48c887e6ec5a65fcd_1/explore), [university/college campuses](https://hub.arcgis.com/datasets/2cc7c37a61554ad181c6356023c8532c_13/explore), and [governmental buildings](https://hub.arcgis.com/datasets/f04fe795a8dd4f04a73bcc1250e20a0a_77/explore) from their websites respectively. All data are provided by Open Data DC. Besides, we used roads() to get DC roads data.

### G. American Community Survey (2017-2021)

We used some socio-economic data from ACS, including household income (B19013_001), population (B01003_001), Bachelor's degree (B15003_022E), workers age 16+ (B08007_001E). These variables can provide some basic economic and social information of each county.
Besides, we used energy consumption information from ACS, including utility gas (B25040_002E), bottled gas (B25040_003E), electricity (B25040_004E), oil (B25040_005E), coal (B25040_006E), and wood (B25040_007E). We believe that energy consumption is a critical predictor for air quality.
Moreover, we used transportation to work data, including drive alone (B08301_003E), carpooled (B08301_004E), public transportation (B08301_010E), taxicab (B08301_016E), motorcycled (B08301_017E), bicycled (B08301_018E), and walked (B08301_019E). We believe the means of transportation also have huge impact on both air quality and the needs for alternative fueling stations.
We created a function to get above data through API. This function is shown in Part 4.

### Packages

```{r}
library(tidyverse)
library(sf)
library(here)
library(tigris)
library(tidycensus)
library(readxl)
library(here)
library(purrr)
library(tidymodels)
library(vip)
```

# III. Exploratory Data Analysis

## 1. Overview: Green Electricity Generation In The U.S.

### A. Data wrangling

```{r}
#read electric power plants data
plants <- read_excel("data/2___Plant_Y2021.xlsx", skip=1) %>% 
  janitor::clean_names() %>% 
  select(plant_code, latitude, longitude)

#read electricity generation data
elec_generation <- read_excel("data/EIA923_Schedules_2_3_4_5_M_12_2021_Final_Revision.xlsx", 
                         sheet = 1, skip = 5) %>% 
  janitor::clean_names() %>% 
  mutate(plant_code = plant_id,
         fuel_type = aer_fuel_type_code,
         net_generation = net_generation_megawatthours) %>% 
  select(plant_code, fuel_type, net_generation) 

#combine datasets
elec_generation <- left_join(x = elec_generation,y = plants,by = "plant_code") %>% 
  filter(
    !is.na(longitude),
    !is.na(latitude)
  ) %>% 
  st_as_sf(coords = c("longitude","latitude")) %>% 
  st_set_crs(4326) 
```

### County-level distribution of green electricity generation

```{r}
#filter green electricity generation
green_elec_generation <- elec_generation %>% 
  filter(fuel_type %in% c("SUN","GEO","HPS","HYC","MLG","ORW","WND","WWW"))

#read counties data
counties <- counties(cb = TRUE, progress_bar = FALSE) %>%
  janitor::clean_names() %>% 
  st_transform(crs = 4326) %>%
  filter(!(stusps %in% c("PR", "GU", "MP", "VI", "HI", "AK", "AS"))) %>% 
  select(geoid, name, namelsad, stusps, state_name, geometry)

#use spatial join to get green electricity generated in each county
c_green_elec <- st_join(counties, green_elec_generation) %>% 
  st_drop_geometry() %>% 
  group_by(geoid) %>% 
  summarize(green_elec = sum(net_generation)) %>% 
  mutate(green_elec = replace_na(green_elec, 0))

#combine datasets to get geometry for c_green_elec
c_green_elec <- left_join(counties, c_green_elec, by = "geoid")

#visualize green electricity generation at county-level
ggplot()+
  geom_sf(c_green_elec, mapping = aes(fill = log(green_elec)))+ 
  scale_fill_gradient(
    low = "lightgreen",
    high = "darkgreen",
    na.value = "lightyellow"
  )+
  labs(title = "Net Renewable Electricity Generation By County",
       subtitle = "logged megawatthours (white indicates zero generation)",
       caption = "U.S. Energy Information Administration",
       fill = "") +
  theme_void()
```

From the graph, we can see that green electricity production is mainly distributed along the East Coast, the West, and the Northeast in the United States, while it is relatively lacking in the center.

### State-level distribution of green electricity generation

```{r}
s_green_elec <- c_green_elec %>% 
  st_drop_geometry() %>% 
  group_by(stusps) %>% 
  summarise(green_elec = sum(green_elec))

#read states data
states <- states(cb = TRUE, progress_bar = FALSE) %>% 
  janitor::clean_names() %>% 
  st_transform(crs = 4326) %>%
  filter(!(stusps %in% c("PR", "GU", "MP", "VI", "HI", "AK", "AS"))) %>% 
  select(stusps, geometry)

#combine datasets to get geometry for s_green_elec
s_green_elec <- left_join(states, s_green_elec, by = "stusps")

#filter plants with green electricity generation within states
green_elec_generation <- st_filter(green_elec_generation, states)

#identify 3 most common fuel type
green_elec_generation %>% 
  group_by(fuel_type) %>% 
  summarise(n = n()) %>% 
  arrange(-n)

#visualize green electricity generation at state-level
ggplot()+
  geom_sf(s_green_elec, mapping = aes(fill = green_elec/1000))+ 
  scale_fill_gradient(
    low = "lightgreen",
    high = "darkgreen"
  )+
  geom_sf(data = green_elec_generation %>% 
            filter(fuel_type %in% c("HYC", "SUN", "WND")),
          mapping = aes(color = fuel_type), size=0.3)+
  labs(title = "Net renewable electricity generation by state",
       subtitle = "1000 megawatthours",
       caption = "U.S. Energy Information Administration",
       fill = "",
       color = "plants with green electricity generation") +
  scale_color_manual(
    name = "Fuel Type",
    labels = c("HYC" = "Hydroelectric Conventional", "SUN" = "Solar", "WND" = "Wind"),
    values = c("HYC" = "red", "SUN" = "yellow", "WND" = "blue")) +
  theme_void()
```

From the graph, we can see that California, Washington, and Texas are leading in green electricity production. Additionally, power plants of different energy types have distinct spatial distribution characteristics. Solar energy is mainly concentrated on the East and West Coasts, wind energy is mainly concentrated in the central inland areas, while the distribution of hydroelectric conventional is more dispersed.

```{r}
#remove used dataframes
rm(green_elec_generation, plants, s_green_elec)
```

## A micro case: alternative fueling stations in DC

### Read and combine datasets

```{r}
#read all datasets
dc_roads <- roads(state = "DC", 
                  county = "District of Columbia",
                  progress_bar=F) %>% 
  st_transform(crs = 4269)

dc_income <- get_acs(
  geography = "tract",
  variables = "B19013_001",
  state = "DC",
  county = "District of Columbia",
  geometry = TRUE,
  year = 2021,
  progress = FALSE
)

dc_hospitals <- st_read("data/DC_Hospitals.geojson",
                        quiet=T) %>% 
  st_transform(crs = 4326) %>% 
  select(geometry) %>% 
  mutate(facility = "Hospital")

dc_cha_schs <- st_read("data/DC_Charter_Schools.geojson",
                       quiet=T) %>% 
  st_transform(crs = 4326) %>% 
  select(geometry) %>% 
  mutate(facility = "Charter School")

dc_pub_schs <- st_read("data/DC_Public_Schools.geojson",
                       quiet=T) %>% 
  st_transform(crs = 4326) %>% 
  select(geometry) %>% 
  mutate(facility = "Public School")

dc_campuses <- st_read("data/University_and_College_Campuses.geojson",
                       quiet=T) %>% 
  st_transform(crs = 4326) %>% 
  select(geometry) %>% 
  mutate(facility = "University/College Campus")

dc_gov <- st_read("data/District_Government_Owned_Structures.geojson",
                  quiet=T) %>% 
  st_transform(crs = 4326) %>% 
  select(geometry) %>% 
  mutate(facility = "Governmental Building")

alt_fuel_stations <- read.csv("data/alt_fuel_stations (Jul 29 2021).csv") %>%
  janitor::clean_names() %>%
  filter(
    !is.na(longitude),
    !is.na(latitude)
  ) %>% 
  st_as_sf(coords = c("longitude","latitude")) %>%  
  st_set_crs(4326) %>% 
  select(geometry) %>% 
  mutate(facility = "Alternative Fueling Station")

dc_boundary <- states(cb = TRUE, progress_bar = FALSE) %>%
  filter(STUSPS == "DC") %>% 
  st_transform(crs = 4326)

#filter alternative fueling stations in DC
dc_alt_fuel_stations <- st_filter(alt_fuel_stations, dc_boundary) 

#combine datasets
facilities <- bind_rows(dc_hospitals, 
                        dc_cha_schs, 
                        dc_pub_schs, 
                        dc_campuses, 
                        dc_gov,
                        dc_alt_fuel_stations) 
```

### Data visualization

```{r}
#mapping facilities
ggplot()+
  geom_sf(data = dc_income, aes(fill = estimate), color = "white", size = 0)+
  geom_sf(data = dc_roads, color = "orange", alpha = 0.3)+
  geom_sf(data = facilities, aes(color = facility), fill = "white", alpha = 0.7)+
  scale_fill_gradient(
    labels = scales::dollar
  )+
  scale_color_manual(values = c(
    "Alternative Fueling Station" = "green", 
    "Charter School" = "yellow", 
    "Governmental Building" = "grey",
    "Hospital" = "red",
    "Public School" = "gold",
    "University/College Campus" = "pink"
  ))+
  geom_sf(data = dc_campuses, color = "pink", fill = "pink", alpha = 0.5)+
  theme_void()+
  labs(
    title = "The Map of Alternative Fueling Stations In DC",
    subtitle = "Who have poor accessibility to alternative fueling stations?",
    caption = "U.S. Department of Transportation",
    fill = "Household Income",
    color = "Facilities") 
```

From the map, we can see that alternative fueling stations are concentrated in the downtown area of DC, while outside the downtown area, they are mainly clustered along the main roads.

University campuses generally have good accessibility to alternative fueling stations. Hospitals in the northern part of DC are all near alternative fueling stations, while the three hospitals in the south are relatively far from them.

In the northwest of DC, where the household income is the highest, the distribution of alternative fueling stations is relatively even, and residents and schools have good accessibility to them.

In the northeast of DC, although the household income is lower, the distribution of alternative fueling stations is still relatively even.

In the eastern part, where the household income further decreases, despite the presence of numerous schools and government buildings, there are only few and concentrated alternative fueling stations, resulting in poor accessibility.

In the southern part, where the household income is low and there are many schools, hospitals, and government buildings, the number of alternative fueling stations is few and mainly located along the main roads, leading to poor accessibility.

Overall, alternative fueling stations are concentrated in the downtown area of DC, and the household income of neighborhoods is highly correlated with the accessibility of alternative fueling stations. Groups with disadvantaged socio-economic status face difficulties in accessing new energy charging facilities.

```{r}
#remove used dataframes
rm(dc_boundary,
   dc_income,
   dc_roads,
   dc_hospitals, 
   dc_cha_schs, 
   dc_pub_schs, 
   dc_campuses, 
   dc_gov,
   dc_alt_fuel_stations,
   facilities)
```

## Combine datasets for machine learning

### Combine existing data

```{r}
# count the number of alternative fueling stations in each county
c_fueling_stations <- st_join(counties, alt_fuel_stations) %>% 
  st_drop_geometry() %>% 
  group_by(geoid) %>% 
  summarize(alt_fuel_stations = n())

# sum the total electricity generation in each county
c_total_elec <- st_join(counties, elec_generation) %>% 
  st_drop_geometry() %>% 
  group_by(geoid) %>% 
  summarize(total_elec = sum(net_generation)) %>% 
  mutate(total_elec = replace_na(total_elec, 0))

#combine all county-level datasets
green <- left_join(c_green_elec, c_total_elec, by = "geoid")
green <- left_join(green, c_fueling_stations, by = "geoid")
```

### Combine air quality data

```{r}
#read air quality index data 
c_aqi <- read.csv("data/annual_aqi_by_county_2021.csv") %>% 
  janitor::clean_names() %>% 
  select(state, county, days_with_aqi, good_days) %>% 
#use the percent of good days to indicate air quality
  mutate(good_days_rate = 100*good_days/days_with_aqi) %>% 
  select(state, county, good_days_rate)

#combine datasets
green <- left_join(green, c_aqi, by = c("state_name" = "state", "name" = "county"))
```

### Combine urban categories data

```{r}
#read urban categories data
c_urban <- read_xlsx("data/NCHSURCodes2013.xlsx") %>% 
  janitor::clean_names() %>% 
  select(state_abr, county_name, urban = x2013_code) %>% 
  #reverse coding, using 1-6 to represent increasing urban rate
  mutate(urban = 7 - urban) 

#combine datasets
green <- left_join(green, c_urban, by = c("stusps" = "state_abr", "namelsad" = "county_name"))
```

### Combine ACS data

```{r}
#create a function
acs_combine <- function(variable, name) {
df <- get_acs(
    geography = "county",
    variables = variable,
    year = 2021,
    progress = FALSE
  ) %>% 
    janitor::clean_names() %>% 
    select(geoid, {{ name }} := estimate) 

green <<- left_join(green, df, by = "geoid")

invisible()
}

#create a list for new acs variables
variables <- list(
  variable = c("B19013_001", 
               "B01003_001",
               "B15003_022E",
               "B08007_001E",
               "B25040_002E",
               "B25040_003E",
               "B25040_004E",
               "B25040_005E",
               "B25040_006E",
               "B25040_007E",
               "B08301_003E",
               "B08301_004E",
               "B08301_010E",
               "B08301_016E",
               "B08301_017E",
               "B08301_018E",
               "B08301_019E"
               ),
  name = c("income", 
           "population", 
           "bachelor",
           "labor",
           "utility_gas",
           "bottled_gas",
           "electricity",
           "oil",
           "coal",
           "wood",
           "drive_alone",
           "carpooled",
           "public_trans",
           "taxicab",
           "motorcycled",
           "bicycled",
           "walked"
          )
)

#combine
pwalk(variables, acs_combine)
```

### Remove irrelevant features

```{r}
#remove irrelavant variables
green <- green %>% 
  select(-geoid, -name, -namelsad, -stusps, -state_name) %>% 
  st_drop_geometry()

#remove used datasets
rm(alt_fuel_stations,
   c_aqi,
   c_fueling_stations,
   c_green_elec,
   c_total_elec,
   c_urban,
   elec_generation,
   variables)
```

### Generate new variables

```{r}
#generate new variables
green <- green %>% 
  mutate(green_elec_prop = 100*green_elec/total_elec) %>% 
  mutate(green_elec_prop = if_else(is.na(green_elec_prop), 0, green_elec_prop)) %>% 
  mutate(labor_prop = 100*labor/population) %>% 
  mutate(bachelor_prop = 100*bachelor/population) %>% 
  mutate(totoal_energy_cons = utility_gas+bottled_gas+electricity+oil+coal+wood) %>% 
  mutate(clean_energy_prop = 100*(utility_gas+bottled_gas+electricity)/totoal_energy_cons) %>% 
  mutate(trad_energy_prop = 100*(oil+coal+wood)/totoal_energy_cons) %>% 
  mutate(clean_trans_prop = 100*(public_trans+bicycled+walked)/labor) %>% 
  mutate(auto_trans_prop = 100*(drive_alone+carpooled+taxicab+motorcycled)/labor) %>% 
  select(-totoal_energy_cons) %>% 
  mutate(afs_per_1000_dirvers = 1000*alt_fuel_stations/drive_alone)
```

## Can green energy industry help predict air quality?

Since green energy use (alternative energy cars) and production (green electricity) are more environmental-friendly, we expect that green energy industry contributes to better air quality. In this section, we will use a decision tree model to test this hypothesis.

### Data cleaning

```{r}
#remove rows with missing air quality
air <- green %>% filter(!is.na(good_days_rate))

#turn good_days_rate into dummy
summary(air$good_days_rate)
```

### Dummy variable generation

The median of good_days_rate is 84, and mean is 81, so I will code air_quality as "good" if good_days_rate \> 80, and as "bad" if good_days_rate \<= 80.

```{r}
air <- air %>% 
  mutate(air_quality = if_else(good_days_rate > 80, "good", "bad")) %>%
  mutate(air_quality = factor(air_quality, levels = c("good", "bad"))) %>% 
  select(-good_days_rate)
```

### Decision tree model

```{r}
set.seed(20240511)

#split data
air_split <- initial_split(data = air, prop = 0.75)

air_train <- training(x = air_split)
air_test <- testing(x = air_split)

#create a recipe
air_rec <-
  recipe(formula = air_quality ~ ., data = air_train)

#create a model
air_mod <-
  decision_tree() %>%
  set_engine(engine = "rpart") %>%
  set_mode(mode = "classification")

air_wf <- workflow() %>%
  add_recipe(air_rec) %>%
  add_model(air_mod)

#fit the model
air_fit <- air_wf %>%
  fit(data = air_train)
```

### Evaluate model

```{r}
#evaluate model
predictions <- bind_cols(
  air_test,
  predict(object = air_fit, new_data = air_test),
  predict(object = air_fit, new_data = air_test, type = "prob")
)

#confusion matrix
conf_mat(data = predictions,
         truth = air_quality,
         estimate = .pred_class)

#accuracy
accuracy(data = predictions,
         truth = air_quality,
         estimate = .pred_class)

#precision
precision(data = predictions,
         truth = air_quality,
         estimate = .pred_class)

#recall
recall(data = predictions,
          truth = air_quality,
          estimate = .pred_class)

#feature importance
air_fit %>%
  extract_fit_parsnip() %>%
  vip(num_features = 10)
```

In this predictive model, the accuracy is 0.668, while precision and recall fall between 0.7 and 0.8, indicating relatively weak predictive power. Therefore, this model does not perform very well in predicting air quality. Additionally, the ten most important predictors do not include green_elec or green_elec_prop. However, drive_alone, clean_energy_prop, and clean_trans_prop are significant predictors. This suggests that while green electricity generation is not a good predictor, the energy consumption structure plays a significant role. Furthermore, citizens' commuting preferences, especially driving and other cleaner transportation methods (public transportation, bicycle, walk), are significant predictors for air quality. However, there is no evidence that the use of new energy vehicles is a significant predictor, as the ten most important predictors do not include afs_per_1000_drivers or alt_fuel_stations.

### Remove irrelevant data

```{r}
rm(air,
   air_fit,
   air_mod,
   air_rec,
   air_split,
   air_test,
   air_train,
   air_wf,
   predictions)
```

## What's the key predictors for alternative fueling stations?

With the development of the green energy car industry, the demand for alternative fueling stations is increasing. Is there a shortage of alternative fueling stations in DC? To address this question, we will establish a lasso regression model to identify the most significant predictors for the number of alternative fueling stations in a city. We believe this model will be highly relevant for policymakers in urban areas.

### Data cleaning

Due to more than 2000 missing values in good_days_rate, I will remove it to avoid having too small of a sample size.

```{r}
green <- green %>% 
  select(-good_days_rate)
```

### Lasso regression model

```{r}
#split data

green_split <- initial_split(green, prop = 0.75)

green_train <- training(green_split)
green_test <- testing(green_split)

#create a recipe
green_rec <- recipe(alt_fuel_stations ~ . , data = green_train) %>% 
  step_filter_missing(all_predictors()) %>% 
  step_normalize(all_numeric_predictors()) %>% 
  step_impute_median(all_numeric_predictors(), all_nominal_predictors())

#create a lasso model
lasso_green <- linear_reg(penalty = tune(), mixture = 1) %>%
  set_engine("glmnet") %>%
  set_mode("regression")

folds <- vfold_cv(green_train, v = 10, strata = alt_fuel_stations)

lasso_grid <- grid_regular(penalty(), levels = 10)

lasso_wf_green <- workflow() %>% 
  add_recipe(green_rec) %>% 
  add_model(lasso_green)

#fit model
lasso_res_green <- lasso_wf_green %>% 
  tune_grid(resample = folds,
            grid = lasso_grid,
            metrics = metric_set(mae,rmse))

#visualize model fit
lasso_res_green %>% 
  collect_metrics(summarize=F) %>% 
  filter(.metric=="rmse") %>% 
  ggplot(aes(x=id,y=.estimate, group=penalty, color=penalty),alpha=0.5)+
  geom_line()+
  geom_point()+
  theme_minimal()
```

### Evaluate model

```{r}
#select best model
lasso_best_green <-lasso_res_green %>%
  select_best(metric = "rmse")

#finalize model
lasso_final_green <- finalize_workflow(
  lasso_wf_green,
  parameters = lasso_best_green) %>% 
  fit(data = green_train)

#predict
predictions <- bind_cols(
  green_test,
  predict(object = lasso_final_green, new_data = green_test))

#calculate rmse
rmse(data = predictions, truth = alt_fuel_stations, estimate=.pred)

summary(green_test$alt_fuel_stations)
```

The RMSE is 28, which is relatively small compared to the range of 1144. However, considering the mean number of alternative fueling stations is 15.55 (since most counties are not urban areas), this model will be more applicable in large cities where the number of alternative fueling stations is significantly higher.

```{r}
#feature inportance
lasso_final_green %>%
  extract_fit_parsnip() %>%
  vip(num_features = 10)
```

The four most significant predictors are population, utility gas consumption, population with Bachelor's degree, and electricity consumption. All of these variables have a clear correlation with the demand for alternative fueling stations. Additionally, the remaining key, albeit less significant, factors are primarily related to modes of transportation, indicating that citizens' preferences for cleaner transportation methods such as public transportation, cycling, motorcycling, and walking are also relevant to their demand for alternative fueling stations.
